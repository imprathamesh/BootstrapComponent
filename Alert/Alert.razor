<div class="alert @AlertStateType(StateType) alert-dismissible @IsVisible()" role="alert">
    <div class="d-flex align-items-center">
        <button type="button" class="btn-close @CloseIsVisible()" data-bs-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <div class=""><i class="@Icon la-2x me-2"></i></div>
        <div>@ChildContent</div>
    </div>
</div>
@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public bool Visible { get; set; }
    [Parameter] public bool CloseButtonVisible { get; set; }
    [Parameter] public string StateType { get; set; }
    [Parameter] public string Icon { get; set; }

    public string IsVisible()
    {
        if (Visible == false)
            return "collapse";
        return string.Empty;
    }
    public string CloseIsVisible()
    {
        if (CloseButtonVisible == false)
            return "collapse";
        return string.Empty;
    }
    private string AlertStateType(string stateType)
    {
        if (!string.IsNullOrEmpty(stateType))
        {
            switch (stateType.ToLower())
            {
                case "primary":
                    return "alert-primary";
                case "secondary":
                    return "alert-secondary";
                case "warning":
                    return "alert-warning";
                case "danger":
                    return "alert-danger";
                case "dark":
                    return "alert-dark";
                case "light":
                    return "alert-light";
                case "info":
                    return "alert-info";
                case "success":
                    return "alert-success";
            }
        }
        return "alert-primary";
    }
}
